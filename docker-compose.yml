version: "3.9"
services:
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: Admin
      RABBITMQ_DEFAULT_PASS: StrongPassword123
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - saasnet
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  api-gateway:
    build:
      context: ./SaaS.ApiGetway
      dockerfile: Dockerfile
    ports:
      - "5000:8080"
    depends_on:
      - auth-service
      - session-service
      - analytics-service
    networks:
      - saasnet
    restart: unless-stopped

  auth-service:
    build:
      context: ./Microservice.AuthService
      dockerfile: Dockerfile
    ports:
      - "5001:8080"
    environment:
      - RabbitMq__HostName=rabbitmq
      - RabbitMq__UserName=Admin
      - RabbitMq__Password=Admin
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - saasnet
    restart: unless-stopped

  session-service:
    build:
      context: ./Microservice.Session
      dockerfile: Dockerfile
    ports:
      - "5002:5002"  # HTTP
      - "7002:7002"  # gRPC
    networks:
      - saasnet
    restart: unless-stopped

  analytics-service:
    build:
      context: ./Microservice.Analytics
      dockerfile: Dockerfile
    ports:
      - "5003:8080"
    networks:
      - saasnet
    restart: unless-stopped

  tech-ciph:
    build:
      context: ./techciph/CipherNetSecurity
      dockerfile: Dockerfile
    ports:
      - "5051:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080
    networks:
      - saasnet
    restart: unless-stopped

volumes:
  rabbitmq_data:

networks:
  saasnet:
    driver: bridge
